let express,upload,create,getOne,getAll,update,destroy,authenticate,isOnlyAdmin,yupValidate,getAllUser_v,createProductSchema,validateUniqueTitle,validateUpdateUniqueTitle;_0fa‍.x([["default",()=>_0fa‍.o]]);_0fa‍.w("express",[["default",["express"],function(v){express=v}]]);_0fa‍.w("../packages/mutler",[["default",["upload"],function(v){upload=v}]]);_0fa‍.w("../controllers/productController",[["create",["create"],function(v){create=v}],["getOne",["getOne"],function(v){getOne=v}],["getAll",["getAll"],function(v){getAll=v}],["update",["update"],function(v){update=v}],["destroy",["destroy"],function(v){destroy=v}]]);_0fa‍.w("../middleware/authenticate",[["authenticate",["authenticate"],function(v){authenticate=v}]]);_0fa‍.w("../middleware/authorization",[["isOnlyAdmin",["isOnlyAdmin"],function(v){isOnlyAdmin=v}]]);_0fa‍.w("../middleware/yupValidate",[["default",["yupValidate"],function(v){yupValidate=v}]]);_0fa‍.w("../middleware/custom_validation",[["getAllUser_v",["getAllUser_v"],function(v){getAllUser_v=v}]]);_0fa‍.w("../validators/product/createProduct",[["createProductSchema",["createProductSchema"],function(v){createProductSchema=v}],["validateUniqueTitle",["validateUniqueTitle"],function(v){validateUniqueTitle=v}],["validateUpdateUniqueTitle",["validateUpdateUniqueTitle"],function(v){validateUpdateUniqueTitle=v}]]);

const router = express.Router();

//Controllers


//Authentication and Authorization



//Validation Middleware

 //_v signifies _validate middleware

//Import validator


/* -----------------------------All User----------------------------------- */

//Get All
router.get("/", authenticate, getAll);

//Get One Product
router.get("/one/:id", authenticate, getOne);


/* -----------------------------Only Admin----------------------------------- */


//Products
router.post("/create", [authenticate, isOnlyAdmin, upload.single('image'), yupValidate(createProductSchema), validateUniqueTitle], create);

//Update Password
router.put("/update/:id", [authenticate, isOnlyAdmin, upload.single('image'), yupValidate(createProductSchema), validateUpdateUniqueTitle], update);

// //Delete User
router.delete("/delete/:id", authenticate, destroy);

_0fa‍.d(router);
